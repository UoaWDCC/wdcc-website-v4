name: Check Build

on:
  # Run on push to any branch except main
  push:
    branches:
      - "*"
      - "!main"
  # Allow manual triggers
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # # set up pnpm https://github.com/pnpm/action-setup
      # - name: Set up pnpm
      #   uses: pnpm/action-setup@v4
      #   with:
      #     version: 10

      # # set up node
      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: "20"
      #     cache: "pnpm"

      # Cache Node.js dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}-

      # # install dependencies using pnpm
      # - name: Install dependencies
      #   run: pnpm install --frozen-lockfile

      # cache next build
      - name: Cache Next.js build artifacts
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      # # build the application
      # - name: Build Next.js project
      #   run: pnpm run build

      # Build with Docker
      # https://github.com/docker/build-push-action
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          secrets: |
            DATABASE_URI=${{ secrets.DATABASE_URI }} \
            PAYLOAD_SECRET=${{ secrets.PAYLOAD_SECRET }} \
            S3_BUCKET=${{ secrets.S3_BUCKET }} \
            S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }} \
            S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }} \
            S3_REGION=${{ secrets.S3_REGION }}